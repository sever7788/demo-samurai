{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","memo","postsElements","posts","map","p","key","id","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","action","addPostActionCreator","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileDataFormReduxForm","onClick","error","style","formSummaryError","createField","Input","type","keys","profile","contacts","contact","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","cardPhoto","photos","large","userPhoto","alt","ava","uploadPhoto","target","files","savePhoto","inputfile","for","initialValues","formData","saveProfile","then","Profile","store","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.6f34abd3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from \"./../../node_modules/react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n                return <Component {...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__2cmwm\",\"cardPhoto\":\"ProfileInfo_cardPhoto__1SOeF\",\"contact\":\"ProfileInfo_contact__36-IT\",\"uploadPhoto\":\"ProfileInfo_uploadPhoto__ig1CD\",\"contacts\":\"ProfileInfo_contacts__35Cjd\",\"inputfile\":\"ProfileInfo_inputfile__hAgj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__XLrTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3opG6\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nconst Post = (props) => {\r\n  return <div className={s.item}>\r\n    <img src='https://www.vokrug.tv/pic/product/6/f/e/2/6fe2523ab4de68e3981b29c9f9f00f17.jpeg'></img>\r\n      {props.message} \r\n      <div>\r\n      <span>{props.likesCount}like</span>\r\n    </div>\r\n  </div>\r\n}\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { maxLengthCreator, required} from './../../../redux/utils/validators/index';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nlet addPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostText\"\r\n         placeholder=\"Enter your post\" validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n// const addPostFormRedux = reduxForm({ form: \"addPost\" })(addPostForm);\r\nconst AddPostFormRedux = reduxForm({form:\"addPost\"})(addPostForm);\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  let postsElements = props.posts.map(p => <Post key = {p.id} message={p.message} key={p.id} likesCount={p.likesCount} />);\r\n  return <div>\r\n    <h3 className=\"heading\">My posts</h3>\r\n    <AddPostFormRedux onSubmit={addNewPost} />\r\n    <div className={s.posts}>\r\n      {postsElements}\r\n    </div>\r\n  </div>\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            let action = addPostActionCreator(newPostText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField } from \"../../../redux/utils/object-helpers\";\r\nimport { Input, Textarea } from \"./../../common/FormsControls/FormsControls\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"./../../common/FormsControls/FormsControls.module.css\";\r\nconst ProfileDataForm = (props) => {\r\n    return <form id=\"description\" onSubmit={props.handleSubmit}>\r\n        <div><button onClick={() => { }}>save</button></div>\r\n        {props.error && <div className={style.formSummaryError}>\r\n            {props.error}\r\n        </div>}\r\n        <div id=\"fullName\">\r\n            <b>Full name: </b>{createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div id=\"contacts\">{/*props.profile.contacts*/}</div>\r\n        <div id=\"lookingForAJob\">\r\n            <b>Looking for a job: </b>\r\n            {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n        </div>\r\n        <div id=\"lookingForAJobDescription\">\r\n            <b>My professional skills: </b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div id=\"aboutMe\">\r\n            <b>About me:</b>\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div id=\"contacts\">\r\n            <b>Contacts: </b>{\r\n                Object.keys(props.profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                    </div>\r\n                })}\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b><span onDoubleClick={activateMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../asseds/images/user.png';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.cardPhoto}>\r\n                <img src={props.profile.photos.large || userPhoto} alt=\"\" className={s.ava} />\r\n                {props.isOwner && <span className={s.uploadPhoto}><input type=\"file\" onChange={onMainPhotoSelected} name=\"file\" id=\"file\" className={s.inputfile} />\r\n                    <label for=\"file\" >Choose a photo</label></span>}\r\n            </div>\r\n            < ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\r\n                : <ProfileData goToEditMode={() => { setEditMode(true); }} profile={props.profile} isOwner={props.isOwner} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div id=\"description\">\r\n        {props.isOwner && <div><button onClick={props.goToEditMode}>edit</button></div>}\r\n        <div id=\"fullName\">\r\n            <b>Full name:</b> {props.profile.fullName}\r\n        </div>\r\n        <div id=\"contacts\">{/*props.profile.contacts*/}</div>\r\n        <div id=\"lookingForAJob\">\r\n            {props.profile.lookingForAJob ? 'Looking for a job' : null}\r\n        </div>\r\n        <div id=\"lookingForAJobDescription\"><b>My professional skills: </b>{props.profile.lookingForAJob ? 'Description: ' + props.profile.lookingForAJobDescription : null}</div>\r\n        <div id=\"aboutMe\">\r\n            <b>About me:</b> {props.profile.aboutMe}\r\n        </div>\r\n        <div id=\"contacts\">\r\n            <b>Contacts: </b>{\r\n                Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}></Contact>\r\n                })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}: </b>{contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return <div className={s.profile}>\r\n    <ProfileInfo isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n      saveProfile={props.saveProfile}\r\n      profile={props.profile}\r\n      status={props.status}\r\n      updateStatus={props.updateStatus} />\r\n    <MyPostsContainer store={props.store} />\r\n  </div>\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, saveProfile, getStatus, updateStatus, savePhoto } from '../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n    render() {\r\n        return <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto} />\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus, updateStatus,\r\n        savePhoto, saveProfile\r\n    }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}